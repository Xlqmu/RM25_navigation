<?xml version="1.0"?>
<robot name="robot" xmlns:xacro="http://www.ros.org/wiki/xacro">

  <!-- 引入 mid360 雷达的 xacro 文件 -->
  <xacro:include filename="$(find rm_robot_description_sim)/urdf/mid360.xacro" />
  <!--xacro:include filename="$(find ros2_livox_simulation)/urdf/mid360.xacro" /-->

  <!-- 基本属性定义 -->
  <xacro:property name="length_wheel" value="0.05" />
  <xacro:property name="radius_wheel" value="0.06" />
  <!--xacro:property name="PI" value="3.1415926"/-->
  
  <!-- 机器人尺寸参数 -->
  <xacro:property name="base_length" value="0.6"/>
  <xacro:property name="base_width" value="0.4"/>
  <xacro:property name="base_height" value="0.15"/>
  <xacro:property name="base_mass" value="15"/>

  <!-- 默认惯性矩阵宏 -->
  <xacro:macro name="default_inertial" params="mass">
    <inertial>
      <mass value="${mass}" />
      <inertia ixx="0.01" ixy="0.0" ixz="0.0"
               iyy="0.01" iyz="0.0" izz="0.01" />
    </inertial>
  </xacro:macro>

  <!-- 传感器位置参数 -->
  <xacro:arg name="xyz" default="0.12 0.0 0.175" />
  <xacro:arg name="rpy" default="0 0 0" />

  <link name="base_footprint"/>

  <!-- Base Link -->
  <link name="base_link">
    <visual>
      <origin xyz="0 0 ${base_height/2}" rpy="0 0 0"/>
      <geometry>
        <box size="${base_length} ${base_width} ${base_height}"/>
      </geometry>
      <material name="grey">
        <color rgba="0.5 0.5 0.5 1"/>
      </material>
    </visual>
    <collision>
      <origin xyz="0 0 ${base_height/2}" rpy="0 0 0"/>
      <geometry>
        <box size="${base_length} ${base_width} ${base_height}"/>
      </geometry>
    </collision>
    <xacro:default_inertial mass="${base_mass}"/>
  </link>

  <!-- 通过固定关节连接 world 和 base_link -->
  <joint name="joint_footprint_base" type="fixed">
    <parent link="base_footprint"/>
    <child link="base_link"/>
  </joint>  

  <!-- 四个麦轮的定义 -->
  <xacro:macro name="wheel" params="prefix x_reflect y_reflect">
    <link name="wheel_${prefix}">
      <visual>
        <origin xyz="0 0 0" rpy="${pi/2} 0 0"/>
        <geometry>
          <cylinder radius="${radius_wheel}" length="${length_wheel}"/>
        </geometry>
        <material name="black">
          <color rgba="0 0 0 1"/>
        </material>
      </visual>
      <collision>
        <origin xyz="0 0 0" rpy="${pi/2} 0 0"/>
        <geometry>
          <cylinder radius="${radius_wheel}" length="${length_wheel}"/>
        </geometry>
      </collision>
      <xacro:default_inertial mass="0.5"/>
    </link>

    <joint name="wheel_${prefix}_joint" type="continuous">
      <parent link="base_link"/>
      <child link="wheel_${prefix}"/>
      <origin xyz="${x_reflect*base_length/3} ${y_reflect*base_width/2} 0" rpy="0 0 0"/>
      <axis xyz="0 1 0"/>
    </joint>

    <!-- 轮子的 Gazebo 配置 -->
    <gazebo reference="wheel_${prefix}">
      <material>Gazebo/Black</material>
      <mu1 value="1.0"/>
      <mu2 value="1.0"/>
      <kp value="10000000.0" />
      <kd value="1.0" />
    </gazebo>
  </xacro:macro>

  <!-- 创建四个轮子 -->
  <xacro:wheel prefix="1" x_reflect="1" y_reflect="1" />
  <xacro:wheel prefix="2" x_reflect="1" y_reflect="-1" />
  <xacro:wheel prefix="3" x_reflect="-1" y_reflect="1" />
  <xacro:wheel prefix="4" x_reflect="-1" y_reflect="-1" />

  <!-- 添加 mid360 雷达 -->
  <xacro:mid360 name="livox" parent="base_link" topic="mid360">
    <!--origin xyz="$(arg xyz)" rpy="$(arg rpy)"/-->
    <origin xyz="0.12 0.0 0.175" rpy="0 0 0"/>
  </xacro:mid360>

  <!-- mid360_imu plugin -->
  <gazebo reference="imu_link">
    <sensor name="mid360_imu" type="imu">
      <always_on>true</always_on>
      <update_rate>100</update_rate>
      <plugin name="imu_plugin" filename="libgazebo_ros_imu_sensor.so">
        <ros>
          <namespace>/</namespace>
          <remapping>~/out:=/livox/imu</remapping>
        </ros>
        <frame_name>imu_link</frame_name>
      </plugin>
    </sensor>
  </gazebo>

  <!-- Gazebo 相关配置 -->
  <gazebo>
    <plugin name="mecanum_controller" filename="libgazebo_ros_planar_move.so">
      <ros>
        <namespace>/</namespace>
        <remapping>cmd_vel:=/cmd_vel</remapping>
      </ros>

      <update_rate>100</update_rate>
      <publish_rate>10</publish_rate>

      <robot_base_frame>base_link</robot_base_frame>

      <covariance_x>0.0001</covariance_x>
      <covariance_y>0.0001</covariance_y>
      <covariance_yaw>0.01</covariance_yaw>
    </plugin>
  </gazebo>

  <!-- 机器人颜色配置 -->
  <gazebo reference="base_link">
    <material>Gazebo/Grey</material>
  </gazebo>

</robot>
